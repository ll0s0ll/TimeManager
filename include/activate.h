/**
 * @file activate.h
 * @brief スケジュールを有効にするコマンドに関する宣言と説明。
 *
 * activateは、プログラムの開始、終了をコントロールする部分である。\n
 * 開始時刻は、プログラムの終了をもって通知し、終了時刻は、自プロセスグループに
 * シグナルを送信して通知する。\n
 * メインプロセスでは開始時刻を、終了時刻は子プロセスを作成して管理する。\n
 * \n
 * メインプロセスは、データベースから自プロセスグループのスケジュールを探し、開
 * 始時刻、終了時刻を取得した後、子プロセスを作成する。\n
 * メインプロセスは、開始時刻までスリープして終了し、後に続くプログラムが開始
 * 時刻に実行されるようにする。\n
 * また、子プロセスは、終了時刻までスリープした後、シグナルを自プロセスグループ
 * に送信して終了する。\n
 * \n
 * 子プロセスのプロセスIDは、自プロセスグループのスケジュールのterminator値で
 * 管理される。\n
 * 親プロセスは、子プロセスを看取らないで終了してしまうので、子プロセスはinitに
 * 引き取られる。\n
 * 子プロセスのゾンビ化を回避するため、SIGCHLDのハンドラにSIG_IGN、
 * フラグにSA_NOCLDWAITを指定する。
 */

#ifndef _ACTIVATE_H_
#define _ACTIVATE_H_

/**
 * @brief データベースにある自プロセスグループのスケジュールを有効にする。
 *
 * 正常に有効化ができると、開始時刻までブロックし、開始時刻とともにstdinの
 * 内容をそのままstdoutに受け流し、終了する。\n
 * 終了時刻には、自プロセスグループに指定のシグナルを送信する。\n
 * 送信されるシグナルのデフォルトはSIGTERM。\n
 * 開始時刻後に再度実行された場合は、終了時刻が再スケジュールされる。
 *
 * @param[in] argc argc値
 * @param[in] argv argv値
 * @return 成功時は0、失敗時には1、コマンドラインオプションが不正な場合は2を返す。
 */
int activate(int argc, char* argv[]);

#endif
